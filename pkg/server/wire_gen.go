// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package server

import (
	"backend_api/application/controller"
	"backend_api/domain/repository"
	"backend_api/infrastructure/mysqlDB"
	"backend_api/pkg/server/middleware"
)

// Injectors from wire.go:

func InitializeAuthenticator() *middleware.AuthenticateCtrl {
	db := repository.InitDB()
	userRepository := mysqlDB.NewUserRepoImpl(db)
	authenticateCtrl := middleware.NewAuthenticateCtl(userRepository)
	return authenticateCtrl
}

func InitializeAuthHandler() *controller.AuthCtrl {
	db := repository.InitDB()
	userRepository := mysqlDB.NewUserRepoImpl(db)
	authCtrl := controller.NewAuthCtl(userRepository)
	return authCtrl
}

func InitializeUserHandler() *controller.UserCtrl {
	db := repository.InitDB()
	userRepository := mysqlDB.NewUserRepoImpl(db)
	userCtrl := controller.NewUserCtl(userRepository)
	return userCtrl
}

func InitializeLoginHandler() *controller.LoginCtrl {
	db := repository.InitDB()
	userRepository := mysqlDB.NewUserRepoImpl(db)
	loginCtrl := controller.NewLoginCtl(userRepository)
	return loginCtrl
}

func InitializeProjectHandler() *controller.ProjectCtrl {
	db := repository.InitDB()
	projectRepository := mysqlDB.NewProjectRepoImpl(db)
	projectPositionRepository := mysqlDB.NewProjectPositionRepoImpl(db)
	projectSkillRepository := mysqlDB.NewProjectSkillRepoImpl(db)
	projectMentorRepository := mysqlDB.NewProjectMentorRepoImpl(db)
	projectUserRepository := mysqlDB.NewProjectUserRepoImpl(db)
	positionRepository := mysqlDB.NewPositionRepoImpl(db)
	skillRepository := mysqlDB.NewSkillRepoImpl(db)
	mentorRepository := mysqlDB.NewMentorRepoImpl(db)
	userRepository := mysqlDB.NewUserRepoImpl(db)
	projectCtrl := controller.NewProjectCtl(projectRepository, projectPositionRepository, projectSkillRepository, projectMentorRepository, projectUserRepository, positionRepository, skillRepository, mentorRepository, userRepository)
	return projectCtrl
}
